'use strict';
define(['jquery', 'underscore', 'flight/lib/component', '../utils/map_utils', "../utils/distance_conversion"], function($, _, defineComponent, mapUtils, distanceConversion) {
  var listingsData;
  listingsData = function() {
    this.defaultAttrs({
      executeOnce: false,
      hybridSearchRoute: "/map_view/listings",
      mapPinsRoute: "/map/pins.json",
      hostname: "www.apartmentguide.com",
      priceRangeRefinements: {}
    });
    this.getListings = function(ev, queryData) {
      return this.xhr = $.ajax({
        url: this.attr.hybridSearchRoute + "?" + (this.decodedQueryData(queryData)),
        success: (function(_this) {
          return function(data) {
            return _this.trigger('listingDataAvailable', {
              htmlData: data,
              query: queryData
            });
          };
        })(this),
        complete: function() {
          return mapUtils.hideSpinner();
        }
      });
    };
    this.decodedQueryData = function(data) {
      return decodeURIComponent($.param(this.queryData(data)));
    };
    this.getMarkers = function(ev, data) {
      data.sort = 'distance';
      return this.xhr = $.ajax({
        url: this.attr.mapPinsRoute + "?" + (this.decodedQueryData(data)),
        success: (function(_this) {
          return function(data) {
            _this.trigger('markersDataAvailable', data);
            return _this.trigger('markersDataAvailableOnce', _this.resetEvents());
          };
        })(this),
        complete: function() {
          return mapUtils.hideSpinner();
        }
      });
    };
    this.renderListings = function(skipFitBounds) {
      var listingObjects, listings;
      if (listings = this._parseListingsFromHtml()) {
        zutron.getSavedListings();
        listingObjects = this._addListingstoMapUpdate(listings, skipFitBounds);
        this._addInfoWindowsToListings(listingObjects);
        return this.listing_count = this._listingsCount(listingObjects);
      }
    };
    this.parseListingsFromHtml = function() {
      var jListingData, listingData, listings;
      listingData = $('#listingData').attr('data-listingData');
      jListingData = $.parseJSON(listingData);
      return listings = jListingData != null ? jListingData.listings : {};
    };
    this.resetEvents = function() {
      if (this.attr.executeOnce) {
        this.off(document, 'uiMarkersDataRequest');
        this.off(document, 'mapRendered');
        return this.off(document, 'uiMapZoomWithMarkers');
      }
    };
    this.after('initialize', function() {
      this.on(document, 'uiListingDataRequest', this.getListings);
      this.on(document, 'uiMarkersDataRequest', this.getMarkers);
      this.on(document, 'mapRendered', this.getListings);
      this.on(document, 'mapRendered', this.getMarkers);
      this.on(document, 'uiMapZoomWithMarkers', this.getListings);
      this.on(document, 'uiMapZoomWithMarkers', this.getMarkers);
      return this.on(document, 'uiMapZoomNoMarkers', this.getListings);
    });
    return this.queryData = function(data) {
      var i, len, mgtcoid, name, priceRange, propertyName, qData, ref, refinements;
      qData = {
        lat: data.latitude,
        latitude: data.latitude,
        lng: data.longitude,
        longitude: data.longitude,
        miles: Math.round(distanceConversion.convertMetersToMiles(data.radius)),
        lat1: data.lat1,
        lng1: data.lng1,
        lat2: data.lat2,
        lng2: data.lng2,
        city: data.city,
        state: data.state,
        zip: data.zip,
        neighborhood: data.hood,
        geoname: data.geoname,
        sort: data.sort
      };
      refinements = mapUtils.getRefinements();
      if (refinements) {
        qData.refinements = encodeURIComponent(refinements);
      }
      propertyName = mapUtils.getPropertyName();
      if (propertyName) {
        qData.propertyname = encodeURIComponent(propertyName);
      }
      mgtcoid = mapUtils.getMgtcoId();
      if (mgtcoid) {
        qData.mgtcoid = encodeURIComponent(mgtcoid);
      }
      priceRange = mapUtils.getPriceRange(this.attr.priceRangeRefinements);
      ref = ['min_price', 'max_price'];
      for (i = 0, len = ref.length; i < len; i++) {
        name = ref[i];
        if (priceRange[name]) {
          qData[name] = priceRange[name];
        }
      }
      return qData;
    };
  };
  return defineComponent(listingsData);
});

//# sourceMappingURL=data:application/json;base64,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LENBQUE7QUEyRkEsU0FBTyxlQUFBLENBQWdCLFlBQWhCLENBQVAsQ0FuR0M7QUFBQSxDQU5ILENBRkEsQ0FBQSIsImZpbGUiOiJkYXRhL2xpc3RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii9zb3VyY2UvIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmRlZmluZSBbXG4gICdqcXVlcnknLFxuICAndW5kZXJzY29yZScsXG4gICdmbGlnaHQvbGliL2NvbXBvbmVudCcsXG4gICcuLi91dGlscy9tYXBfdXRpbHMnLFxuICBcIi4uL3V0aWxzL2Rpc3RhbmNlX2NvbnZlcnNpb25cIlxuXSwgKFxuICAkLFxuICBfXG4gIGRlZmluZUNvbXBvbmVudCxcbiAgbWFwVXRpbHMsXG4gIGRpc3RhbmNlQ29udmVyc2lvblxuKSAtPlxuXG4gIGxpc3RpbmdzRGF0YSA9IC0+XG5cbiAgICBAZGVmYXVsdEF0dHJzXG4gICAgICBleGVjdXRlT25jZTogZmFsc2VcbiAgICAgIGh5YnJpZFNlYXJjaFJvdXRlOiBcIi9tYXBfdmlldy9saXN0aW5nc1wiXG4gICAgICBtYXBQaW5zUm91dGU6ICBcIi9tYXAvcGlucy5qc29uXCJcbiAgICAgIGhvc3RuYW1lOiBcInd3dy5hcGFydG1lbnRndWlkZS5jb21cIlxuICAgICAgcHJpY2VSYW5nZVJlZmluZW1lbnRzOiB7fVxuXG4gICAgQGdldExpc3RpbmdzID0gKGV2LCBxdWVyeURhdGEpIC0+XG4gICAgICBAeGhyID0gJC5hamF4XG4gICAgICAgIHVybDogXCIje0BhdHRyLmh5YnJpZFNlYXJjaFJvdXRlfT8je0BkZWNvZGVkUXVlcnlEYXRhKHF1ZXJ5RGF0YSl9XCJcbiAgICAgICAgc3VjY2VzczogKGRhdGEpID0+XG4gICAgICAgICAgQHRyaWdnZXIgJ2xpc3RpbmdEYXRhQXZhaWxhYmxlJywgaHRtbERhdGE6IGRhdGEsIHF1ZXJ5OiBxdWVyeURhdGFcbiAgICAgICAgY29tcGxldGU6IC0+XG4gICAgICAgICAgbWFwVXRpbHMuaGlkZVNwaW5uZXIoKVxuXG4gICAgQGRlY29kZWRRdWVyeURhdGEgPSAoZGF0YSkgLT5cbiAgICAgIGRlY29kZVVSSUNvbXBvbmVudCgkLnBhcmFtKEBxdWVyeURhdGEoZGF0YSkpKVxuXG4gICAgQGdldE1hcmtlcnMgPSAoZXYsIGRhdGEpIC0+XG4gICAgICBkYXRhLnNvcnQgPSAnZGlzdGFuY2UnXG4gICAgICBAeGhyID0gJC5hamF4XG4gICAgICAgIHVybDogXCIje0BhdHRyLm1hcFBpbnNSb3V0ZX0/I3tAZGVjb2RlZFF1ZXJ5RGF0YShkYXRhKX1cIlxuICAgICAgICBzdWNjZXNzOiAoZGF0YSkgPT5cbiAgICAgICAgICBAdHJpZ2dlciAnbWFya2Vyc0RhdGFBdmFpbGFibGUnLCBkYXRhXG4gICAgICAgICAgQHRyaWdnZXIgJ21hcmtlcnNEYXRhQXZhaWxhYmxlT25jZScsIEByZXNldEV2ZW50cygpXG4gICAgICAgIGNvbXBsZXRlOiAtPlxuICAgICAgICAgIG1hcFV0aWxzLmhpZGVTcGlubmVyKClcblxuICAgIEByZW5kZXJMaXN0aW5ncyA9IChza2lwRml0Qm91bmRzKSAtPlxuICAgICAgaWYgbGlzdGluZ3MgPSBAX3BhcnNlTGlzdGluZ3NGcm9tSHRtbCgpXG4gICAgICAgIHp1dHJvbi5nZXRTYXZlZExpc3RpbmdzKClcbiAgICAgICAgbGlzdGluZ09iamVjdHMgPSBAX2FkZExpc3RpbmdzdG9NYXBVcGRhdGUobGlzdGluZ3MsIHNraXBGaXRCb3VuZHMpXG4gICAgICAgIEBfYWRkSW5mb1dpbmRvd3NUb0xpc3RpbmdzKGxpc3RpbmdPYmplY3RzKVxuICAgICAgICBAbGlzdGluZ19jb3VudCA9IEBfbGlzdGluZ3NDb3VudChsaXN0aW5nT2JqZWN0cylcblxuICAgIEBwYXJzZUxpc3RpbmdzRnJvbUh0bWwgPSAoKSAtPlxuICAgICAgbGlzdGluZ0RhdGEgPSAkKCcjbGlzdGluZ0RhdGEnKS5hdHRyKCdkYXRhLWxpc3RpbmdEYXRhJylcbiAgICAgIGpMaXN0aW5nRGF0YSA9ICQucGFyc2VKU09OKGxpc3RpbmdEYXRhKVxuICAgICAgbGlzdGluZ3MgPSBpZiBqTGlzdGluZ0RhdGE/IHRoZW4gakxpc3RpbmdEYXRhLmxpc3RpbmdzIGVsc2Uge31cblxuICAgIEByZXNldEV2ZW50cyA9IC0+XG4gICAgICBpZiBAYXR0ci5leGVjdXRlT25jZVxuICAgICAgICBAb2ZmIGRvY3VtZW50LCAndWlNYXJrZXJzRGF0YVJlcXVlc3QnXG4gICAgICAgIEBvZmYgZG9jdW1lbnQsICdtYXBSZW5kZXJlZCdcbiAgICAgICAgQG9mZiBkb2N1bWVudCwgJ3VpTWFwWm9vbVdpdGhNYXJrZXJzJ1xuXG4gICAgQGFmdGVyICdpbml0aWFsaXplJywgLT5cbiAgICAgIEBvbiBkb2N1bWVudCwgJ3VpTGlzdGluZ0RhdGFSZXF1ZXN0JywgQGdldExpc3RpbmdzXG4gICAgICBAb24gZG9jdW1lbnQsICd1aU1hcmtlcnNEYXRhUmVxdWVzdCcsIEBnZXRNYXJrZXJzXG4gICAgICBAb24gZG9jdW1lbnQsICdtYXBSZW5kZXJlZCcsIEBnZXRMaXN0aW5nc1xuICAgICAgQG9uIGRvY3VtZW50LCAnbWFwUmVuZGVyZWQnLCBAZ2V0TWFya2Vyc1xuICAgICAgQG9uIGRvY3VtZW50LCAndWlNYXBab29tV2l0aE1hcmtlcnMnLCBAZ2V0TGlzdGluZ3NcbiAgICAgIEBvbiBkb2N1bWVudCwgJ3VpTWFwWm9vbVdpdGhNYXJrZXJzJywgQGdldE1hcmtlcnNcbiAgICAgIEBvbiBkb2N1bWVudCwgJ3VpTWFwWm9vbU5vTWFya2VycycsIEBnZXRMaXN0aW5nc1xuXG4gICAgQHF1ZXJ5RGF0YSA9IChkYXRhKSAtPlxuICAgICAgcURhdGEgPSB7XG4gICAgICAgIGxhdDogZGF0YS5sYXRpdHVkZVxuICAgICAgICBsYXRpdHVkZTogZGF0YS5sYXRpdHVkZVxuICAgICAgICBsbmc6IGRhdGEubG9uZ2l0dWRlXG4gICAgICAgIGxvbmdpdHVkZTogZGF0YS5sb25naXR1ZGVcbiAgICAgICAgbWlsZXM6IE1hdGgucm91bmQoZGlzdGFuY2VDb252ZXJzaW9uLmNvbnZlcnRNZXRlcnNUb01pbGVzKGRhdGEucmFkaXVzKSlcbiAgICAgICAgbGF0MTogZGF0YS5sYXQxXG4gICAgICAgIGxuZzE6IGRhdGEubG5nMVxuICAgICAgICBsYXQyOiBkYXRhLmxhdDJcbiAgICAgICAgbG5nMjogZGF0YS5sbmcyXG4gICAgICAgIGNpdHk6IGRhdGEuY2l0eVxuICAgICAgICBzdGF0ZTogZGF0YS5zdGF0ZVxuICAgICAgICB6aXA6IGRhdGEuemlwXG4gICAgICAgIG5laWdoYm9yaG9vZDogZGF0YS5ob29kXG4gICAgICAgIGdlb25hbWU6IGRhdGEuZ2VvbmFtZVxuICAgICAgICBzb3J0OiBkYXRhLnNvcnRcbiAgICAgIH1cblxuICAgICAgcmVmaW5lbWVudHMgPSBtYXBVdGlscy5nZXRSZWZpbmVtZW50cygpXG4gICAgICBxRGF0YS5yZWZpbmVtZW50cyA9IGVuY29kZVVSSUNvbXBvbmVudChyZWZpbmVtZW50cykgaWYgcmVmaW5lbWVudHNcblxuICAgICAgcHJvcGVydHlOYW1lID0gbWFwVXRpbHMuZ2V0UHJvcGVydHlOYW1lKClcbiAgICAgIHFEYXRhLnByb3BlcnR5bmFtZSA9IGVuY29kZVVSSUNvbXBvbmVudChwcm9wZXJ0eU5hbWUpIGlmIHByb3BlcnR5TmFtZVxuXG4gICAgICBtZ3Rjb2lkID0gbWFwVXRpbHMuZ2V0TWd0Y29JZCgpXG4gICAgICBxRGF0YS5tZ3Rjb2lkID0gZW5jb2RlVVJJQ29tcG9uZW50KG1ndGNvaWQpIGlmIG1ndGNvaWRcblxuICAgICAgcHJpY2VSYW5nZSA9IG1hcFV0aWxzLmdldFByaWNlUmFuZ2UoQGF0dHIucHJpY2VSYW5nZVJlZmluZW1lbnRzKVxuICAgICAgZm9yIG5hbWUgaW4gWydtaW5fcHJpY2UnLCAnbWF4X3ByaWNlJ11cbiAgICAgICAgcURhdGFbbmFtZV0gPSBwcmljZVJhbmdlW25hbWVdIGlmIHByaWNlUmFuZ2VbbmFtZV1cblxuICAgICAgcURhdGFcblxuICByZXR1cm4gZGVmaW5lQ29tcG9uZW50KGxpc3RpbmdzRGF0YSlcbiJdfQ==